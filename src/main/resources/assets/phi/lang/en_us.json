{
	"phi.spellparam.frequency": "Frequency",
	"phi.spellparam.from": "From",
	"phi.spellparam.to": "To",
	"phi.spellparam.from_to": "From / To",
	"phi.spellparam.to_from": "To / From",
	"phi.spellparam.condition": "Condition",
	"phi.spellparam.positive": "Positive",
	"phi.spellparam.negative": "Negative",
	"phi.spellparam.div": "A / B",
	"phi.spellparam.mod": "A %% B",
	"phi.spellparam.digit": "Digit",
	"phi.spellparam.target1": "Target A",
	"phi.spellparam.target2": "Target B",
	"phi.spellparam.prefix": "Prefix",
	"phi.spellparam.text": "Text",
	"phi.spellparam.text1": "Text A",
	"phi.spellparam.text2": "Text B",
	"phi.spellparam.text3": "Text C",
	"phi.spellparam.text4": "Text D",
	"phi.spellparam.before": "Before",
	"phi.spellparam.after": "After",
	"phi.spellparam.at": "At",
	"phi.spellparam.default": "Default",

	"phi.spellerror.range": "ERROR: The range of this trick is 32 blocks",
	"phi.spellerror.min_wave": "ERROR: Psion wave parameters must be at least one",
	"phi.spellerror.ed": "?",
	"phi.spellerror.ambiguous": "ERROR: Ambiguous branching",
	"phi.spellerror.invalid_target": "ERROR: Invalid target",
	"phi.spellerror.no_mpu": "ERROR: This trick can only be used in a Magic Processing Unit",
	"phi.spellerror.mpu": "ERROR: This trick can't be used in a Magic Processing Unit",
	"phi.spellerror.not_number": "ERROR: The provided text doesn't represent a number",
	"phi.spellerror.nested_loop": "ERROR: Looping constructs can't be nested",

	"phi.cadstat.overflow_damage": "Overflow Damage",

	"psi.datatype.object": "Any",
	"psi.datatype.string": "Text",

	"phi.spellpiece.trick_psion_wave": "Trick: Psion Wave",
	"phi.spellpiece.trick_psion_wave.desc": "Emits a psion wave. Magicians hit by it will feel dizzy",
	"phi.spellpiece.trick_psi_transfer": "Trick: Psi Transfer",
	"phi.spellpiece.trick_psi_transfer.desc": "Compresses psionic energy into a projectile that can charge Magic Processing Units",
	"phi.spellpiece.trick_shadow": "Trick: Shadow",
	"phi.spellpiece.trick_shadow.desc": "Casts a shadow over a block",
	"phi.spellpiece.trick_shadow_sequence": "Trick: Shadow Sequence",
	"phi.spellpiece.trick_shadow_sequence.desc": "Casts a shadow over multiple blocks in a line",
	"phi.spellpiece.trick_conjure_marker": "Trick: Conjure Marker",
	"phi.spellpiece.trick_conjure_marker.desc": "Conjures a marker visible through walls to the caster and spells. Has an increased range.",
	"phi.spellpiece.trick_move_marker": "Trick: Move Marker",
	"phi.spellpiece.trick_move_marker.desc": "Moves a marker conjured by the caster. Has an increased range.",
	"phi.spellpiece.trick_caster_blink": "Trick: Caster Blink",
	"phi.spellpiece.trick_caster_blink.desc": "Teleports the caster in the given direction",
	"phi.spellpiece.trick_swap_blink": "Trick: Swap Blink",
	"phi.spellpiece.trick_swap_blink.desc": "Targets switch place. Targets caster by default",
	"phi.spellpiece.trick_swap_blink_position": "Trick: Swap Blink (Position Only)",
	"phi.spellpiece.trick_swap_blink_position.desc": "Targets switch place, but not look direction. Targets caster by default",

	"phi.spellpiece.trick_early_evaluate": "Trick: Early Evaluate",
	"phi.spellpiece.trick_early_evaluate.desc": "Evaluates the target piece early if condition is within (-1, 1) exclusive",
	"phi.spellpiece.trick_reevaluate": "Trick: Reevaluate",
	"phi.spellpiece.trick_reevaluate.desc": "Reevaluates the target piece if condition is within (-1, 1) exclusive",

	"phi.spellpiece.trick_save_vector_component": "Trick: Save Vector Component",
	"phi.spellpiece.trick_save_vector_component.desc": "Saves a number to a component of a saved vector. The vector slot is given by target / 3, the component by the remainder of target / 3",
	"phi.spellpiece.trick_write_vector_storage": "Trick: Write Vector Storage",
	"phi.spellpiece.trick_write_vector_storage.desc": "Writes a vector to an adjacent Vector Storage Unit. Requires a Magic Processing Unit",
	"phi.spellpiece.trick_set_comparator_output": "Trick: Set Comparator Output",
	"phi.spellpiece.trick_set_comparator_output.desc": "Sets the comparator output of the Magic Processing Unit executing the trick",
	"phi.spellpiece.trick_set_time": "Trick: Set Time",
	"phi.spellpiece.trick_set_time.desc": "Sets the internal time of a Magic Processing Unit",

	"phi.spellpiece.selector_nearby_markers": "Selector: Nearby Markers",
	"phi.spellpiece.selector_nearby_markers.desc": "Selects markers near the given position. Has an increased range.",
	"phi.spellpiece.selector_nearby_burning": "Selector: Nearby Burning",
	"phi.spellpiece.selector_nearby_burning.desc": "Selects burning entities near the given position.",

	"phi.spellpiece.selector_saved_vector_component": "Selector: Saved Vector Component",
	"phi.spellpiece.selector_saved_vector_component.desc": "Reads a component of a saved vector. The vector slot is given by target / 3, the component by the remainder of target / 3",
	"phi.spellpiece.selector_read_vector_storage": "Selector: Read Vector Storage",
	"phi.spellpiece.selector_read_vector_storage.desc": "Reads a vector from an adjacent Vector Storage Unit. Requires a Magic Processing Unit",

	"phi.spellpiece.selector_spell_name": "Selector: Spell Name",
	"phi.spellpiece.selector_spell_name.desc": "Reads the name of the spell",
	"phi.spellpiece.selector_caster_speech": "Selector: Caster Speech",
	"phi.spellpiece.selector_caster_speech.desc": "Gets the last chat message said by the caster",

	"phi.spellpiece.operator_to_degrees": "Operator: To Degrees",
	"phi.spellpiece.operator_to_degrees.desc": "Converts radians to degrees",
	"phi.spellpiece.operator_to_radians": "Operator: To Radians",
	"phi.spellpiece.operator_to_radians.desc": "Converts degrees to radians",
	"phi.spellpiece.operator_multiply_accumulate": "Operator: Multiply Accumulate",
	"phi.spellpiece.operator_multiply_accumulate.desc": "a * b + c",
	"phi.spellpiece.operator_difference": "Operator: Difference",
	"phi.spellpiece.operator_difference.desc": "|a-b|",
	"phi.spellpiece.operator_div_mod": "Operator: Integer Divide, Modulus",
	"phi.spellpiece.operator_div_mod.desc": "Computes both a / b and a %% b",
	"phi.spellpiece.operator_signum_positive_zero": "Operator: Signum (Positive Zero)",
	"phi.spellpiece.operator_signum_positive_zero.desc": "Returns the sign of the input, treating zero as positive",
	"phi.spellpiece.operator_signum_negative_zero": "Operator: Signum (Negative Zero)",
	"phi.spellpiece.operator_signum_negative_zero.desc": "Returns the sign of the input, treating zero as negative",
	"phi.spellpiece.operator_extract_digit": "Operator: Extract Digit",
	"phi.spellpiece.operator_extract_digit.desc": "Extracts a single digit (counting from last, default: 1) from an integer in the given base (default: 10)",
	"phi.spellpiece.operator_replace_digit": "Operator: Replace Digit",
	"phi.spellpiece.operator_replace_digit.desc": "Replaces a single digit (counting from last, default: 1) in an integer in the given base (default: 10)",

	"phi.spellpiece.operator_defaulted_vector_construct": "Operator: Defaulted Vector Construct",
	"phi.spellpiece.operator_defaulted_vector_construct.desc": "Constructs a vector, replacing unspecified components with the given default value",
	"phi.spellpiece.operator_vector_component_wise_multiply": "Operator: Vector Component Wise Multiply",
	"phi.spellpiece.operator_vector_component_wise_multiply.desc": "Also known as the Hadamard product",
	"phi.spellpiece.operator_split_vector": "Operator: Split Vector",
	"phi.spellpiece.operator_split_vector.desc": "Splits a vector to its components",
	"phi.spellpiece.operator_replace_vector_component": "Operator: Replace Vector Component",
	"phi.spellpiece.operator_replace_vector_component.desc": "Replaces components of a vector",
	"phi.spellpiece.operator_precise_raycast": "Operator: Precise Raycast",
	"phi.spellpiece.operator_precise_raycast.desc": "Returns the exact hit position of a raycast",
	"phi.spellpiece.operator_offset_raycast": "Operator: Offset Raycast",
	"phi.spellpiece.operator_offset_raycast.desc": "Returns the offset of the hit position of a raycast from the center of the block it hit",
	"phi.spellpiece.operator_nearest_axial_vector": "Operator: Nearest Axial Vector",
	"phi.spellpiece.operator_nearest_axial_vector.desc": "Returns the axial vector the input direction vector is closest to",
	"phi.spellpiece.operator_round_vector": "Operator: Round Vector",
	"phi.spellpiece.operator_round_vector.desc": "Rounds the components of a vector to integers",
	"phi.spellpiece.operator_truncate_vector": "Operator: Truncate Vector",
	"phi.spellpiece.operator_truncate_vector.desc": "Removes the decimal places of the components of a vector",
	"phi.spellpiece.operator_clamp_vector": "Operator: Clamp Vector",
	"phi.spellpiece.operator_clamp_vector.desc": "Clamps a vector to be under the given magnitude",
	"phi.spellpiece.operator_focused_block": "Operator: Focused Block",
	"phi.spellpiece.operator_focused_block.desc": "Gets the block the target entity is looking at",
	"phi.spellpiece.operator_focused_block_face": "Operator: Focused Block Face",
	"phi.spellpiece.operator_focused_block_face.desc": "Gets the normal vector of the block face the target entity is looking at",

	"phi.spellpiece.operator_entity_sneak_status": "Operator: Entity Sneak Status",
	"phi.spellpiece.operator_entity_sneak_status.desc": "Selects if the target entity is sneaking (0 if yes, 1 if no)",
	"phi.spellpiece.operator_entity_name": "Operator: Entity Name",
	"phi.spellpiece.operator_entity_name.desc": "Gets the name of the given entity",
	"phi.spellpiece.operator_entity_eye_position": "Operator: Entity Eye Position",
	"phi.spellpiece.operator_entity_eye_position.desc": "Gets the position of the eye of the given entity",
	"phi.spellpiece.operator_entity_foot_position": "Operator: Entity Foot Position",
	"phi.spellpiece.operator_entity_foot_position.desc": "Gets the position of the foot of the given entity",

	"phi.spellpiece.operator_as_text": "Operator: As Text",
	"phi.spellpiece.operator_as_text.desc": "Converts its input to text",
	"phi.spellpiece.operator_text_length": "Operator: Text Length",
	"phi.spellpiece.operator_text_length.desc": "Returns the length of the given text in characters",
	"phi.spellpiece.operator_append_text": "Operator: Append Text",
	"phi.spellpiece.operator_append_text.desc": "Appends pieces of text to each other (doesn't add spaces between)",
	"phi.spellpiece.operator_character_code_at": "Operator: Character Code At",
	"phi.spellpiece.operator_character_code_at.desc": "Gets the code of the Nth character in the given text",
	"phi.spellpiece.operator_character_from_code": "Operator: Character From Code",
	"phi.spellpiece.operator_character_from_code.desc": "Gets the character corresponding to the given code (between 0 and 255)",
	"phi.spellpiece.operator_lower_case": "Operator: Lower Case",
	"phi.spellpiece.operator_lower_case.desc": "Converts the given text to lower case",
	"phi.spellpiece.operator_upper_case": "Operator: Upper Case",
	"phi.spellpiece.operator_upper_case.desc": "Converts the given text to upper case",
	"phi.spellpiece.operator_split_text": "Operator: Split Text",
	"phi.spellpiece.operator_split_text.desc": "Splits the given text before the Nth character",
	"phi.spellpiece.operator_split_text_at": "Operator: Split Text At",
	"phi.spellpiece.operator_split_text_at.desc": "Splits a text at the first occurence of the given part of said text",
	"phi.spellpiece.operator_number_from_text": "Operator: Number From Text",
	"phi.spellpiece.operator_number_from_text.desc": "Gets the numeric value of a textual number representation",

	"phi.spellpiece.operator_hash": "Operator: Hash",
	"phi.spellpiece.operator_hash.desc": "Converts its input to incomprehensible gibberish. Seems to output the same number for the same input and different numbers for different inputs",

	"phi.spellpiece.operator_branch": "Operator: Branch",
	"phi.spellpiece.operator_branch.desc": "Selects one of its inputs based on the sign of the condition",

	"phi.spellpiece.connector_clockwise": "Clockwise Connector",
	"phi.spellpiece.connector_clockwise.desc": "Redirects inputs to outputs next to them clockwise",
	"phi.spellpiece.connector_counterclockwise": "Counterclockwise Connector",
	"phi.spellpiece.connector_counterclockwise.desc": "Redirects inputs to outputs next to them counterclockwise",
	"phi.spellpiece.connector_bidirectional": "Bidirectional Connector",
	"phi.spellpiece.connector_bidirectional.desc": "Creates a two-way connection between its ends",
	"phi.spellpiece.connector_in_out": "In-Out Connector",
	"phi.spellpiece.connector_in_out.desc": "Splits a two-way connection",
	"phi.spellpiece.connector_bridge": "Bridge Connector",
	"phi.spellpiece.connector_bridge.desc": "Connects to pieces from a distance of two grid cells",

	"phi.spellpiece.constant_text": "Constant: Text",
	"phi.spellpiece.constant_text.desc": "Select and type to set value",
	"phi.spellpiece.constant_vector": "Constant: Vector",
	"phi.spellpiece.constant_vector.desc": "Select, press X, Y or Z and type to set coordinate",

	"item.phi.spell_magazine.desc": "\u00a7aSpell Magazine\u00a77: A hot swappable alternative to CAD Sockets\nRight-click to swap the magazine with the one in your CAD\nCompatible only with CADs that were assembled with the same magazine type",

	"item.phi.basic_spell_magazine": "Basic Spell Magazine",
	"item.phi.basic_spell_magazine.desc": "A cheap Spell Magazine",
	"item.phi.large_spell_magazine": "Large Spell Magazine",
	"item.phi.large_spell_magazine.desc": "A Spell Magazine with increased capacity",
	"item.phi.huge_spell_magazine": "Huge Spell Magazine",
	"item.phi.huge_spell_magazine.desc": "A Spell Magazine with extra-large capacity",

	"item.phi.wide_band_spell_magazine": "Wide Band Spell Magazine",
	"item.phi.wide_band_spell_magazine.desc": "A cheaper Spell Magazine optimized for high-bandwidth spells",

	"item.phi.increased_storage_spell_magazine": "Increased Storage Spell Magazine",
	"item.phi.increased_storage_spell_magazine.desc": "A Spell Magazine with more capacity allocated to vector data storage",
	"item.phi.bulk_storage_spell_magazine": "Bulk Storage Spell Magazine",
	"item.phi.bulk_storage_spell_magazine.desc": "A Spell Magazine optimized for storing large amounts of vector data",

	"item.phi.smart_spell_magazine": "Smart Spell Magazine",
	"item.phi.smart_spell_magazine.desc": "A Spell Magazine with a smart selection system to assist in loopcasting spells that span more than one bullet\nAutomatically reselects the first slot when loopcast ends",
	"item.phi.compound_spell_magazine": "Compound Spell Magazine",
	"item.phi.compound_spell_magazine.desc": "A Spell Magazine designed for simultaneous activation of up to 3 spells",

	"item.phi.blood_converter": "Blood Converter",
	"item.phi.blood_converter.desc": "\u00a7aBlood Converter\u00a77: Improves blood to psi conversion ratio, reducing overflow damage\nIt doesn't look very safe to use",

	"block.phi.mpu": "Magic Processing Unit",
	"block.phi.mpu.desc": "\u00a7aMagic Processing Unit\u00a77: A block that automatically casts spells\nRight click with a spell container to reprogram it\nDisable with redstone signal",
	"block.phi.vsu": "Vector Storage Unit",
	"block.phi.vsu.desc": "\u00a7aVector Storage Unit\u00a77: A block that stores a vector that can be accessed and modified by adjacent machines"
}
